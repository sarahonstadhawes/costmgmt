{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "costmgmt-adf"
        },
        "AzureBlobStorage1_connectionString": {
            "type": "secureString",
            "metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
        },
        "AzureDataLakeStorage1_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
        },
        "AzureDataLakeStorage2_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
        },
        "AzureDataLakeStorage3_accountKey": {
            "type": "secureString",
            "metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage3'"
        },
        "AzureDataLakeStorage1_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://acctstorcostmgmt.dfs.core.windows.net/"
        },
        "AzureDataLakeStorage2_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://acctstorcostmgmt.dfs.core.windows.net/"
        },
        "AzureDataLakeStorage3_properties_typeProperties_url": {
            "type": "string",
            "defaultValue": "https://acctstorcostmgmt.dfs.core.windows.net/"
        },
        "LS_Keyvault_properties_typeProperties_baseUrl": {
            "type": "string",
            "defaultValue": "https://costmgmtvault.vault.azure.net/"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/Check_Refined_Folder')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "currentday",
                        "description": "Current day variable",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "currentday",
                            "value": {
                                "value": "@formatdatetime(utcnow(), 'yyyy-MM-dd')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "RefinedData",
                        "description": "Goes into the refined folder",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "currentday",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "RefinedData",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "RefinedFilesList",
                        "description": "Loops through each of the files in the refined folder and checks if a file has been made today",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "RefinedData",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('RefinedData').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "IfFileCreatedToday",
                                    "description": "Checks to see if a refined file has been made or not for today",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "RefinedDataFilename",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@contains(variables('refineddatafile'),variables('currentday'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "FileCreatedToday",
                                                "description": "States that a file has been successfully made today",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "filecreatedtoday",
                                                    "value": "true"
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "RefinedDataFilename",
                                    "description": "Sets variable as the name of the file",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "refineddatafile",
                                        "value": {
                                            "value": "@item().name",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IfRefinedFileCreated",
                        "description": "If a refined file has been created today do nothing and if it hasn't run other pipeline",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "RefinedFilesList",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@equals(variables('filecreatedtoday'), 'true')",
                                "type": "Expression"
                            },
                            "ifFalseActivities": [
                                {
                                    "name": "Execute PL_RUN_DBX_NB",
                                    "description": "Run databricks pipeline",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "PL_RUN_DBX_NB",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {}
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "currentday": {
                        "type": "String"
                    },
                    "refineddatafile": {
                        "type": "String"
                    },
                    "filecreatedtoday": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2023-01-25T23:16:54Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/RefinedData')]",
                "[concat(variables('factoryId'), '/pipelines/PL_RUN_DBX_NB')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/PL_RUN_DBX_NB')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "run a Databricks notebook for cost data",
                "activities": [
                    {
                        "name": "Set Variable for CM",
                        "description": "Current month variable ",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "startofcurrentmonth",
                            "value": {
                                "value": "@formatDateTime(utcnow(), 'yyyyMM')\n",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "Set Variable for CD",
                        "description": "Current day variable",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "currentdate",
                            "value": {
                                "value": "@formatdatetime(utcnow(), 'MM/dd/yyyy')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SubfolderNames",
                        "description": "Gets the Month Folder Names",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "Set Variable for CM",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set Variable for CD",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "MonthFolders",
                                "type": "DatasetReference",
                                "parameters": {}
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobFSReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "FolderNamesLoop",
                        "description": "Loop through the month folder names and set a variable to the current month folder name",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "SubfolderNames",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('SubfolderNames').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "IfCurrentMonthName",
                                    "description": "Check if the folder name is the same as the CM variable",
                                    "type": "IfCondition",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@contains(string(item().name),variables('startofcurrentmonth'))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "CMFolder",
                                                "description": "Current Month Folder",
                                                "type": "SetVariable",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "variableName": "CMFolder",
                                                    "value": {
                                                        "value": "@item().name",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "DailyFiles",
                        "description": "Goes through the daily files for the current month",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "FolderNamesLoop",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "DailyFiles",
                                "type": "DatasetReference",
                                "parameters": {
                                    "FileName": {
                                        "value": "@variables('CMFolder')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "BinaryReadSettings"
                            }
                        }
                    },
                    {
                        "name": "FilesModifiedDate",
                        "description": "Loops through each file and saves the last modified date for each file",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "DailyFiles",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('DailyFiles').output.childItems",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "FilesModified",
                                    "description": "Checks when each file has been modified",
                                    "type": "GetMetadata",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "ModifiedDateOfFiles",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "Folder": {
                                                    "value": "@variables('CMFolder')",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@item().name",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "lastModified"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true,
                                            "enablePartitionDiscovery": false
                                        },
                                        "formatSettings": {
                                            "type": "BinaryReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "ModifiedDates",
                                    "description": "Adds files modified dates to array",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "FilesModified",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "DailyFilesModified",
                                        "value": {
                                            "value": "@formatdatetime(activity('FilesModified').output.lastModified, 'MM/dd/yyyy')\n",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "IfFileCreatedToday",
                        "description": "Checks if a file has been created today and runs the databricks notebook",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "FilesModifiedDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@contains(variables('DailyFilesModified'), variables('currentdate'))\n",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "Run DataAnalysis Notebook",
                                    "type": "DatabricksNotebook",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.12:00:00",
                                        "retry": 1,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "notebookPath": "/DataAnalysis"
                                    },
                                    "linkedServiceName": {
                                        "referenceName": "LS_Databricks_CostData",
                                        "type": "LinkedServiceReference"
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "variables": {
                    "startofcurrentmonth": {
                        "type": "String"
                    },
                    "currentdate": {
                        "type": "String"
                    },
                    "CMFolder": {
                        "type": "String"
                    },
                    "DailyFilesModified": {
                        "type": "Array"
                    },
                    "RefinedDataFiles": {
                        "type": "Array"
                    },
                    "test": {
                        "type": "String"
                    },
                    "currentday": {
                        "type": "String"
                    },
                    "RefinedDataList": {
                        "type": "Array"
                    },
                    "refineddatafile": {
                        "type": "String"
                    },
                    "filecreatedtoday": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2023-02-06T23:08:16Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/MonthFolders')]",
                "[concat(variables('factoryId'), '/datasets/DailyFiles')]",
                "[concat(variables('factoryId'), '/datasets/ModifiedDateOfFiles')]",
                "[concat(variables('factoryId'), '/linkedServices/LS_Databricks_CostData')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DailyFiles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "FileName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "folderPath": {
                            "value": "@concat('data/DailyCostMgmtData', '/', dataset().FileName)",
                            "type": "Expression"
                        },
                        "container": "raw"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/ModifiedDateOfFiles')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureBlobStorage1",
                    "type": "LinkedServiceReference"
                },
                "parameters": {
                    "Folder": {
                        "type": "string"
                    },
                    "FileName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobStorageLocation",
                        "fileName": {
                            "value": "@dataset().FileName",
                            "type": "Expression"
                        },
                        "folderPath": {
                            "value": "@concat('data/DailyCostMgmtData', '/', dataset().Folder)",
                            "type": "Expression"
                        },
                        "container": "raw"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/MonthFolders')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "folderPath": "data/DailyCostMgmtData",
                        "fileSystem": "raw"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RefinedData')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage3",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Binary",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileSystem": "refined"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage3')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('AzureDataLakeStorage1_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage2')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('AzureDataLakeStorage2_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage3')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobFS",
                "typeProperties": {
                    "url": "[parameters('AzureDataLakeStorage3_properties_typeProperties_url')]",
                    "accountKey": {
                        "type": "SecureString",
                        "value": "[parameters('AzureDataLakeStorage3_accountKey')]"
                    }
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_Databricks_CostData')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureDatabricks",
                "typeProperties": {
                    "domain": "https://adb-104152244951068.8.azuredatabricks.net",
                    "accessToken": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "LS_Keyvault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "Databrickstoken"
                    },
                    "newClusterNodeType": "Standard_DS3_v2",
                    "newClusterNumOfWorker": "2",
                    "newClusterSparkEnvVars": {
                        "PYSPARK_PYTHON": "/databricks/python3/bin/python3"
                    },
                    "newClusterVersion": "10.4.x-scala2.12",
                    "newClusterInitScripts": [],
                    "clusterOption": "Fixed"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/LS_Keyvault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/LS_Keyvault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('LS_Keyvault_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/Daily Refresh')]",
            "type": "Microsoft.DataFactory/factories/triggers",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "runtimeState": "Started",
                "pipelines": [
                    {
                        "pipelineReference": {
                            "referenceName": "Check_Refined_Folder",
                            "type": "PipelineReference"
                        },
                        "parameters": {}
                    }
                ],
                "type": "ScheduleTrigger",
                "typeProperties": {
                    "recurrence": {
                        "frequency": "Day",
                        "interval": 1,
                        "startTime": "2022-12-13T23:41:00",
                        "timeZone": "Mountain Standard Time",
                        "schedule": {
                            "minutes": [
                                30,
                                45,
                                0,
                                15
                            ],
                            "hours": [
                                8,
                                9,
                                10
                            ]
                        }
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/Check_Refined_Folder')]"
            ]
        }
    ]
}